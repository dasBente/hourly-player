#!/bin/bash

# Path to the users .hourlyplayer directory, their hourlies and lists
readonly WORK_PATH="$HOME/.hourlyplayer"
readonly HOURLIES="$WORK_PATH/hourlies"
readonly LISTS="$WORK_PATH/lists"

# Path to config and other inportant files
readonly CONFIG="$WORK_PATH/config"
readonly CURRENT="$WORK_PATH/CURRENT_HOURLY"
readonly MUTE="$WORK_PATH/MUTE"
readonly LAST_UPDATE="$WORK_PATH/LAST_UPDATE"

# Plays the current hourly
play_curr_hourly() {
    # Get current hourly and current hour of the day
    local cur_hourly=`cat "$CURRENT"`
    local cur_hour=`date +%H`

    aplay "$HOURLIES/$cur_hourly/$cur_hour.wav"
}

# Returns a (sorted) list of all hourlies
list_hourlies() {
    ls -d "$HOURLIES"/*/ | sed s_"$HOURLIES/"__ | sed s_/__
}

# Returns a sorted list of available hourlies
hourlies_in_list() {
    if [ "$1" == "default" ]; then
	current_default
    elif [ "$1" == "all" ]; then
	list_hourlies
    elif [[ "$1" =~ ^- ]]; then # Remove hourlies in negative list from available ones
	list="${1:1}"
	echo "$(list_hourlies)" | sort - "$LISTS/$list" | uniq -u
    else 
	cat "$LISTS/$1"
    fi
}

# Generate a new hourly from the list defined in config
new_hourly() {
    # Pick a new hourly # TODO: Probably rework this (maybe with cut)

    # Check which list of hourlies should be used
    local list=""

    if [[ "$1" -eq "" ]]; then
	list="$(current_list)"
    else
	list="$1"
    fi
    
    local hourlies=`hourlies_in_list "$list"`
    
    # Number of hourlies in the list
    local num_hourlies=`echo "$hourlies" | wc -w`

    # Choose a hourly at random
    local rand=`echo $((RANDOM % $num_hourlies + 1))`
    echo $hourlies | cut -d " " -f $rand > "$CURRENT"
}

update_hourly() {
    # Get data necessary to deduce whether hourlies are up to date
    local today=`date +%m%d`
    local last_update=""
    
    if [ -e "$LAST_UPDATE" ]; then
	last_update=`cat "$LAST_UPDATE"`
    fi

    # Update todays hourly if not up to date, otherwise we're done
    if [ "$today" != "$last_update" ]; then
	new_hourly
    fi

    # Update LAST_UPDATE
    echo $today > "$LAST_UPDATE"
}

# Display current hourly
current_hourly() {
    if [[ "$1" == "" ]]; then
	cat "$CURRENT"
    else
        if [[ "$(list_hourlies)" =~ (^|[[:space:]])"$1"($|[[:space:]])  ]]; then
	    echo "$(date +%m%d)" > "$LAST_UPDATE"
	    echo "$1" > "$CURRENT"
	else
	    echo "The given hourly is not known."
	    exit 1
	fi
    fi
}

# Lists all available hourly lists
all_lists() {
    ls "$LISTS"
}

# Display current default
current_default() {
    if [[ "$1" == "" ]]; then
        cat "$CONFIG" | grep default | cut -d'=' -f2
    else
	sed -i s/default=.*/default="$2"/ "$CONFIG"
    fi
}

# Print the currently selected list
current_list() {
    if [[ "$1" == "" ]]; then
	cat "$CONFIG" | grep hourly_list | sed s/hourly_list=//
    else
	sed -i s/hourly_list=.*/hourly_list="$1"/ "$CONFIG"
    fi
}

# Print all hourlies (optionally in a given list)
all_hourlies() {
    if [[ "$1" == "" ]]; then
	hourlies_in_list "all"
    else
	hourlies_in_list "$1"
    fi
}

# Mute the hourly player
mute() {
    if [[ "$1" == "" ]]; then
	if [[ -e "$MUTE" ]]; then
	    rm "$MUTE"
	else
	    touch "$MUTE"
	fi
    else
	if [[ "$1" == "1" ]]; then
	    touch "$MUTE"
	elif [[ "$1" == "0" ]]; then
	    rm "$MUTE"
	else
	    echo "Parameter $1 not known, please use either 0 or 1!"
	    exit 1
	fi
    fi
}

# Print usage help
usage() {
    cat << EOF
Usage: $0 [-hclmdraA] [OPTIONS]

Only one command line option is allowed at a time. No options will result in the
current hourly to be played.

    -h | --help                    --- Show this message.
    -c | --current-hourly [OPTION] --- Get the current hourly or change it to
                                       OPTION.
    -l | --list           [OPTION] --- Get the currently selected list or change
                                       this list to OPTION.
    -m | --mute           [OPTION] --- Toggle the mute option or mute/unmute the
                                       player by supplying 1/0 as OPTION 
                                       respectively.
    -d | --default        [OPTION] --- Get the current default hourly or set the
                                       default to OPTION.
    -r | --random-hourly  [OPTION] --- Choose a random new hourly either from 
                                       the current list or the list supplied as
                                       OPTION.
    -a | -all             [OPTION] --- Print either all hourlies or all hourlies
                                       in the list specified by OPTION.
    -A | -all-lists                --- Print all available lists.

If the LAST_UPDATE file in the .hourlyplayer directory is from the day before,
play_hourly will automatically choose a new hourly from the selected list of
hourlies.

Special lists: There are some special parameters for the -l option:
 all             - Select from all available hourlies
 default         - Select only the hourly set in the config as default (-d)
 prepended minus - Select from the complement of the given list 
                   (e.g. only hourlies NOT on that list) 
EOF
}

# Main function
main() {
    # We only process one flag at a time anyway, so no loop needed
    if [[ "$#" -gt 0 ]]; then
	case "$1" in
	    -h|--help)           usage ;;
	    -c|--current-hourly) current_hourly "$2" ;;
	    -l|--list)           current_list "$2" ;;
	    -m|--mute)           mute "$2" ;;
	    -d|--default)        current_default "$2" ;;
	    -r|--random-hourly)  new_hourly "$2" ;;
	    -a|--all)            all_hourlies "$2" ;;
	    -A|--all-lists)      all_lists;;
	esac
	exit 0
    fi

    # Check, whether the .hourlyplayer directory exists
    if [ ! -d "$WORK_PATH" ]; then
	mkdir "$WORK_PATH"
    fi
    
    # Check whether MUTE exists and update and play hourlies otherwise
    if [ ! -e "$MUTE" ]; then
	update_hourly
	play_curr_hourly
    fi
}

main "$@"
